// <auto-generated />
using System;
using A1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace A1.Migrations
{
    [DbContext(typeof(dbContect))]
    [Migration("20220407184703_migrate")]
    partial class migrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("A1.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Bolivia"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Cameroon"
                        });
                });

            modelBuilder.Entity("A1.Models.Customer", b =>
                {
                    b.Property<int>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerID"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerID");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customerID = 1,
                            CountryId = 1,
                            address = "2040 Bunny Road",
                            city = "Toronto",
                            email = "mergitu.m.megersa@gmail.com",
                            firstName = "Mergitu",
                            lastName = "Megersa",
                            phone = "525-223-9201",
                            postCode = "H4A 1H1",
                            state = "Ontario"
                        },
                        new
                        {
                            customerID = 2,
                            CountryId = 1,
                            address = "440 Round Avenue",
                            city = "Phnom Penh",
                            email = "cookietamam@gmail.com",
                            firstName = "Cookie",
                            lastName = "Aba Tamam",
                            phone = "456-995-3795",
                            postCode = "12100",
                            state = "Ta Khmau"
                        });
                });

            modelBuilder.Entity("A1.Models.Incident", b =>
                {
                    b.Property<int>("IncidentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentID"), 1L, 1);

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dateClosed")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<int?>("technicianID")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentID");

                    b.HasIndex("customerID");

                    b.HasIndex("productID");

                    b.HasIndex("technicianID");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentID = 1,
                            customerID = 1,
                            dateClosed = new DateTime(2022, 4, 7, 14, 47, 3, 204, DateTimeKind.Local).AddTicks(3010),
                            dateOpened = new DateTime(2022, 4, 7, 14, 47, 3, 204, DateTimeKind.Local).AddTicks(3020),
                            description = "Bleep bleep, bloop bloop",
                            productID = 1,
                            technicianID = 1,
                            title = "Error launching program"
                        },
                        new
                        {
                            IncidentID = 2,
                            customerID = 2,
                            dateClosed = new DateTime(2022, 4, 7, 14, 47, 3, 204, DateTimeKind.Local).AddTicks(3030),
                            dateOpened = new DateTime(2022, 4, 7, 14, 47, 3, 204, DateTimeKind.Local).AddTicks(3040),
                            description = "Bloop bloop, bleep bleep",
                            productID = 2,
                            technicianID = 2,
                            title = "Redirect to wrong page"
                        });
                });

            modelBuilder.Entity("A1.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("yearlyPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            code = "22N39FD",
                            name = "Toothbrush",
                            releaseDate = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            yearlyPrice = 28.0
                        },
                        new
                        {
                            ProductID = 2,
                            code = "383IIFD",
                            name = "Mug Holder",
                            releaseDate = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            yearlyPrice = 32.920000000000002
                        },
                        new
                        {
                            ProductID = 3,
                            code = "00SEDR3",
                            name = "Banana",
                            releaseDate = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            yearlyPrice = 392.02999999999997
                        });
                });

            modelBuilder.Entity("A1.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianID"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianID");

                    b.ToTable("Technician");

                    b.HasData(
                        new
                        {
                            TechnicianID = 1,
                            email = "rufushasanemail@email.com",
                            name = "Rufus",
                            phone = "290-292-9332"
                        },
                        new
                        {
                            TechnicianID = 2,
                            email = "anthony@email.com",
                            name = "Anthony",
                            phone = "290-832-2201"
                        },
                        new
                        {
                            TechnicianID = 3,
                            email = "michaela@email.com",
                            name = "Michaela",
                            phone = "290-215-1322"
                        });
                });

            modelBuilder.Entity("A1.Models.Customer", b =>
                {
                    b.HasOne("A1.Models.Country", "Country")
                        .WithMany("Customers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("A1.Models.Incident", b =>
                {
                    b.HasOne("A1.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A1.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A1.Models.Technician", "technician")
                        .WithMany()
                        .HasForeignKey("technicianID");

                    b.Navigation("customer");

                    b.Navigation("product");

                    b.Navigation("technician");
                });

            modelBuilder.Entity("A1.Models.Country", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
